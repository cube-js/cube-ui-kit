// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tasty() API should allow multiple wrapping 1`] = `".t15 {position: static; padding-top: calc(2 * var(--gap)); border: var(--border-width) solid var(--black-color); color: var(--white-color); --current-color: var(--white-color, white); --current-color-rgb: var(--white-color-rgb); display: flex;}"`;

exports[`tasty() API should allow nested modifiers 1`] = `
".t16 {display: block;}
.t16:first-child {color: var(--clear-color); --current-color: var(--clear-color, clear); --current-color-rgb: var(--clear-color-rgb);}
.t16:not(:first-child) {color: var(--black-color); --current-color: var(--black-color, black); --current-color-rgb: var(--black-color-rgb);}"
`;

exports[`tasty() API should be able to override styles 1`] = `".t7 {display: block; color: rgb(var(--black-color-rgb) / .1); --current-color: var(--black-color, black); --current-color-rgb: var(--black-color-rgb);}"`;

exports[`tasty() API should create element styles 1`] = `
".t12:not([data-is-modified]) [data-element="Element"] {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t12[data-is-modified] [data-element="Element"] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}"
`;

exports[`tasty() API should create responsive styles 1`] = `
"@media (min-width: 980px) {.t11 {display: grid;}}
@media (max-width: 979px) {.t11 {display: flex;}}"
`;

exports[`tasty() API should define style props 1`] = `".t14 {border: var(--border-width) solid var(--border-color);}"`;

exports[`tasty() API should fallback to default variant 1`] = `".t9 {color: var(--white-color); --current-color: var(--white-color, white); --current-color-rgb: var(--white-color-rgb);}"`;

exports[`tasty() API should merge element styles 1`] = `
".t13:not([data-is-modified]) [data-element="Element"] {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t13[data-is-modified] [data-element="Element"] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}
.t13 [data-element="Element"] {background-color: var(--black-color);}
.t13 [data-element="Element"]>* {--context-fill-color: var(--black-color); --context-fill-color-rgb: var(--black-color-rgb);}"
`;

exports[`tasty() API should merge styles 1`] = `
".t6:not([data-is-modified]) {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t6[data-is-modified] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}
.t6 {background-color: var(--black-color);}
.t6>* {--context-fill-color: var(--black-color); --context-fill-color-rgb: var(--black-color-rgb);}"
`;

exports[`tasty() API should merge styles in custom prop 1`] = `
".t6:not([data-is-modified]) {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t6[data-is-modified] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}
.t6 {background-color: var(--black-color);}
.t6>* {--context-fill-color: var(--black-color); --context-fill-color-rgb: var(--black-color-rgb);}"
`;

exports[`tasty() API should optimize attribute selectors 1`] = `
".t17 {display: block;}
.t17:not([data-size]) {padding-top: var(--gap);}
.t17[data-size="large"] {padding-top: calc(3 * var(--gap));}
.t17[data-size="medium"] {padding-top: calc(2 * var(--gap));}"
`;

exports[`tasty() API should optimize attribute selectors 2`] = `
".t18 {display: block;}
.t18:not([data-is-selected]):not([data-size]) {padding-top: var(--gap);}
.t18[data-size="large"]:not([data-is-selected]) {padding-top: calc(3 * var(--gap));}
.t18[data-size="medium"]:not([data-is-selected]) {padding-top: var(--gap);}
.t18[data-is-selected]:not([data-size]) {padding-top: var(--gap);}
.t18[data-size="large"][data-is-selected] {padding-top: calc(3 * var(--gap));}
.t18[data-size="medium"][data-is-selected] {padding-top: calc(2 * var(--gap));}"
`;

exports[`tasty() API should optimize attribute selectors 3`] = `
".t19 {display: block;}
.t19:not([data-is-selected]):not([data-size]) {padding-top: var(--gap);}
.t19[data-size="large"]:not([data-is-selected]) {padding-top: var(--gap);}
.t19[data-is-selected]:not([data-size]) {padding-top: calc(2 * var(--gap));}
.t19[data-size="large"][data-is-selected] {padding-top: calc(3 * var(--gap));}
.t19[data-size="medium"]:not([data-is-selected]) {padding-top: calc(2 * var(--gap));}
.t19[data-is-selected][data-size="medium"] {padding-top: calc(2 * var(--gap));}"
`;

exports[`tasty() API should pass styles from tasty 1`] = `".t2 {display: block; color: rgb(var(--clear-color-rgb) / .1); --current-color: var(--clear-color, clear); --current-color-rgb: var(--clear-color-rgb);}"`;

exports[`tasty() API should support camelCase modifiers 1`] = `
".t5 {display: block;}
.t5:not([data-is-somehow-modified]) {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t5[data-is-somehow-modified] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}"
`;

exports[`tasty() API should support kebab-case modifiers 1`] = `
".t4 {display: block;}
.t4:not([data-is-somehow-modified]) {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t4[data-is-somehow-modified] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}"
`;

exports[`tasty() API should support modifiers 1`] = `
".t3 {display: block;}
.t3:not([data-is-modified]) {color: var(--dark-color); --current-color: var(--dark-color, dark); --current-color-rgb: var(--dark-color-rgb);}
.t3[data-is-modified] {color: var(--purple-color); --current-color: var(--purple-color, purple); --current-color-rgb: var(--purple-color-rgb);}"
`;

exports[`tasty() API should support variants 1`] = `".t8 {color: var(--black-color); --current-color: var(--black-color, black); --current-color-rgb: var(--black-color-rgb);}"`;
