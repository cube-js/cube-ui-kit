name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn release
          commit: 'chore: release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-chromatic:
    name: 'Deploy storybook to Chromatic'
    needs: publish
    if: needs.publish.outputs.published == 'false'
    runs-on: ubuntu-latest
    environment:
      name: Chromatic Production
      url: ${{ steps.publish_chromatic.outputs.url }}
    env:
      CHROMATIC_RETRIES: 5
      LOG_LEVEL: 'error'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn

      - uses: actions/cache@v2
        name: Download storybook cache
        with:
          path: |
            **/node_modules/.cache
          key: ${{ runner.os }}-storybook

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Publish to Chromatic
        id: publish_chromatic
        uses: chromaui/action@v1
        with:
          exitZeroOnChanges: true
          exitOnceUploaded: true
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  deploy-docs:
    name: 'Deploy Latest documentation'
    needs: publish
    if: needs.publish.outputs.published == 'true'
    runs-on: ubuntu-latest
    environment:
      name: Docs Production
      url: ${{ steps.publish_docs.outputs.NETLIFY_PREVIEW_URL }}
    env:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn

      - uses: actions/cache@v2
        name: Download storybook cache
        with:
          path: |
            **/node_modules/.cache
          key: ${{ runner.os }}-storybook

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build Docs
        run: yarn build-docs --quiet

      - name: Deploy docs to Netlify
        uses: South-Paw/action-netlify-deploy@v1.2.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
          build-dir: ./storybook-docs
