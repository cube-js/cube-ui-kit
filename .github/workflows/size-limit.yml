name: Measure size of the library
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-size-limit=${{github.ref}}-1
  cancel-in-progress: true

permissions:
  contents: read  # Read-only access to repository contents
  issues: write   # Write access to issues
  pull-requests: write  # Write access to pull requests
  statuses: write  # Write access to commit statuses

jobs:
  size-limit:
    name: 'Measure size of the library'
    runs-on: ubuntu-latest
    env:
      REPORT_FOLDER: './size-limit-report'
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - uses: actions/checkout@v4

      - name: Update Corepack
        run: npm i -g corepack@latest

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Enable Corepack (pre)
        run: corepack enable

      - name: Prepare pnpm (pre)
        run: corepack prepare pnpm@10.14.0 --activate

      - name: Enable Corepack
        run: corepack enable
      
      - name: Prepare pnpm
        run: corepack prepare pnpm@10.14.0 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Download baseline stats
        uses: dawidd6/action-download-artifact@v4
        if: github.event.number
        with:
          workflow: size-limit.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: ./__compare

      - name: Measure size
        id: measure_size
        continue-on-error: true
        run: BASELINE='./__compare/${{ env.REPORT_FOLDER }}/output.json' node ./scripts/ci/measure-size.js

      - name: Save stats
        run: echo '${{ steps.measure_size.outputs.result }}' > ./size-limit-report/output.json

      - name: Upload stats
        uses: actions/upload-artifact@v4
        with:
          name: size-limit-report
          path: ${{ env.REPORT_FOLDER }}

      - name: Build Statoscope Report
        if: github.event.number
        run: npx statoscope generate -i ${{ env.REPORT_FOLDER }}/stats.json -r ./__compare/${{ env.REPORT_FOLDER }}/stats.json --output ${{ env.REPORT_FOLDER }}/report.html

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event.number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const setMessage = require('${{ github.workspace }}/scripts/ci/set-message.cjs')
            
            await setMessage({
              header: "## üèãÔ∏è Size limit report",
              body: `
                ${{ steps.measure_size.outputs.table }}
                ---
                [Click here if you want to find out what is changed in this build](${{ steps.deploy_report.outputs.preview-url }}/report.html)
              `,
              github,
              repo: context.repo,
              prNumber: context.payload.pull_request.number
            })
      - name: Throw error
        if: steps.measure_size.outcome != 'success'
        run: |
          echo "Size limit has been exceeded"
          exit 1
