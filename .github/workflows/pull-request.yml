name: 'pull-request'
on:
  pull_request:
    branches:
      - main

concurrency:
  group: ci-pull-request=${{github.ref}}-1
  cancel-in-progress: true

jobs:
  pull-request:
    runs-on: ubuntu-latest
    environment:
      name: Chromatic staging
      url: ${{ steps.publish_chromatic.outputs.url }}
    env:
      CI_JOB_NUMBER: 1
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set env
        run: echo "SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn --frozen-lockfile --prefer-offline
          yarn global add chromatic

      - name: Increment canary
        run: npm version 0.0.0-canary-$SHORT_SHA --no-git-tag-version

      - name: Build project
        run: yarn build

      - name: Measure size
        run: GH_TOKEN=${{ secrets.GITHUB_TOKEN }} node ./scripts/ci/measure-size.mjs

      - name: Run the lint
        run: yarn lint

      - name: Run the tests
        run: npm run test

      - name: Build Storybook
        run: yarn build-storybook --quiet

      - name: Deploy To Netlify
        run: npx netlify-cli deploy

      - name: Publish to Chromatic
        id: publish_chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Publish canary
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: pr_${{ github.event.number }}
          access: public
          check-version: true
          package: ./dist/package.json

      - name: PR Comment
        if: steps.publish.outputs.type != 'none'
        uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `:package: Deployed canary version ${{ steps.publish.outputs.version }}.`
            })
